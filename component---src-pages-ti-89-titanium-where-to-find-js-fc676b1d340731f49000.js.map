{"version":3,"sources":["webpack:///./src/pages/ti-89-titanium/where-to-find.js","webpack:///./src/components/definitions-list.js"],"names":["query","WhereToFind","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3___default","terms","allMarkdownRemark","edges","sort","a","b","node","frontmatter","title","toLowerCase","localeCompare","console","log","location","pathname","parameters","path","split","length","type","letter","term","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_calc_layout__WEBPACK_IMPORTED_MODULE_7__","css","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","styles","_components_definitions_list__WEBPACK_IMPORTED_MODULE_8__","DefinitionsList","_this","_React$Component","call","this","state","selected","toUpperCase","render","_this2","letters","arr","filter","startsWith","react__WEBPACK_IMPORTED_MODULE_5___default","Fragment","map","i","key","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","className","dangerouslySetInnerHTML","__html","html","React","Component"],"mappings":"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","file":"component---src-pages-ti-89-titanium-where-to-find-js-fc676b1d340731f49000.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../../components/layout'\nimport CalcLayout from '../../components/calc-layout'\nimport DefinitionsList from '../../components/definitions-list'\n\nimport * as styles from '../../styles/styles.js'\n\nconst WhereToFind = ({data, ...props}) => {\n    const terms = data.allMarkdownRemark.edges.sort(function (a, b) {\n      return a.node.frontmatter.title.toLowerCase().localeCompare(b.node.frontmatter.title.toLowerCase());\n    });\n    const subpath = '/ti-89-titanium/where-to-find'\n    console.log(props.location.pathname)\n    const path = props.location.pathname.split('/')\n    let parameters\n    if (path.length === 5 || path.length === 6) {\n      // if path size is 5, then we are on a term\n      parameters = {\n        type: 'term',\n        letter: path[3],\n        term: path[4]\n      }\n    }\n    else if (path.length === 4 && path[3]) {\n      // if 4, then we are on a letter\n      parameters = {\n        type: 'letter',\n        letter: path[3]\n      }\n    }\n    else {\n      // if 3 or not any of the above, just show all\n      parameters = {\n        type: 'all'\n      }\n    }\n\n   \n    \n    return (\n        <Layout>\n            <CalcLayout title=\"TI-89 Titanium\">\n                <div css={[styles.container, styles.calcContainer, styles.whereToFindContainer]}>\n                    <h2>Where To Findâ€¦</h2>\n                    <DefinitionsList path={subpath} terms={terms} parameters={parameters} />\n                </div>\n            </CalcLayout>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n{\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___title], order: ASC },\n    filter: { fileAbsolutePath: { regex: \"/(ti-89-titanium)/.*(.md)$/\"}}\n  ) {\n    edges {\n      node {\n        html\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n}\n`\n\nexport default WhereToFind\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport * as styles from '../styles/styles.js'\n\nclass DefinitionsList extends React.Component {\n    constructor(props) {\n        super(props)\n        if (props.parameters.type === 'term') {\n            this.state = {\n                selected: props.parameters.letter.toUpperCase(),\n                term: props.parameters.term\n            }\n        }\n        else if (props.parameters.type === 'letter') {\n            this.state = {\n                selected: props.parameters.letter.toUpperCase(),\n            }\n        }\n        else {\n            this.state = {\n                selected: 'ALL'\n            }\n        }\n    }\n\n    render() {\n        // path prefix fix\n        const split = this.props.path.split('/InfinityCalcs')\n        const path = split[split.length-1]\n\n        const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n        let arr = this.props.terms\n        if (this.state.selected !== 'ALL') {\n            arr = this.props.terms.filter((term) => term.node.frontmatter.title.toUpperCase().startsWith(this.state.selected))\n        }\n\n        return (\n            <>\n                <div css={styles.definitionsNav}>\n                    <ul>\n                        {letters.map((letter, i) => (<li key={i}> <span css={this.state.selected === letter ? styles.selected : {}}><Link to={`${path}/${letter.toLowerCase()}`}>{letter}</Link></span> |</li>))}\n                        <li css={{paddingLeft: 4}}><span css={this.state.selected === 'ALL' ? styles.selected : {}}><Link to={`${path}/`}>See all</Link></span></li>\n                    </ul>\n                </div>\n                <div css={styles.definitionsList}>\n                    <p className=\"title\">{this.state.selected !== 'ALL' ? this.state.selected : 'All'}</p>\n                    <ul>\n                        {arr.length ? arr.map((term, i) => (\n                            <li key={i} css={term.node.frontmatter.title.toLowerCase() === this.state.term ? [styles.definition, styles.showDefinition] : [styles.definition, styles.hideDefinition]}>\n                                <div className=\"term\">\n                                    <Link to={term.node.frontmatter.title.toLowerCase() === this.state.term ? `${path}/${term.node.frontmatter.title[0].toLowerCase()}` : `${path}/${term.node.frontmatter.title[0].toLowerCase()}/${term.node.frontmatter.title.toLowerCase()}`}>{term.node.frontmatter.title}</Link>\n                                </div>\n                                <div className=\"definition\" dangerouslySetInnerHTML={{ __html: term.node.html }}/>                         \n                            </li>\n                        )) : 'No terms found.'}\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default DefinitionsList\n"],"sourceRoot":""}