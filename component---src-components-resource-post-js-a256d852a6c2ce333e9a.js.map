{"version":3,"sources":["webpack:///./src/components/resource-post.js","webpack:///./src/components/calc-layout.js"],"names":["__webpack_exports__","_ref","post","data","markdownRemark","meta","frontmatter","description","push","name","content","keywords","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_calc_layout__WEBPACK_IMPORTED_MODULE_6__","title","titleHref","extraStyles","styles","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","css","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","video","width","height","src","frameborder","allow","allowfullscreen","dangerouslySetInnerHTML","__html","html","query","CalcLayout","children","react__WEBPACK_IMPORTED_MODULE_2___default","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","concat","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","propTypes","PropTypes","string","isRequired","node","array"],"mappings":"4MASeA,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eACZC,EAAO,GAOb,OANIH,EAAKI,YAAYC,aACnBF,EAAKG,KAAK,CAACC,KAAM,cAAeC,QAASR,EAAKI,YAAYC,cAExDL,EAAKI,YAAYK,UACnBN,EAAKG,KAAK,CAACC,KAAM,WAAYC,QAASR,EAAKI,YAAYC,cAGvDK,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,IAAAD,CAACG,EAAA,EAAD,CAAYC,MAAM,YAAYC,UAAU,cAAcC,YAAa,CAACC,MAC9DP,OAAAC,EAAA,IAAAD,CAACQ,EAAAC,EAAD,CACEL,MAAUd,EAAKI,YAAYU,MAAtB,oBACLX,KAAMA,IAGTO,OAAAC,EAAA,IAAAD,CAAA,OAAKU,IAAGV,OAAAW,EAAA,EAAAX,CAAE,CAACO,IAAkBA,IAAsBA,OAChDP,OAAAC,EAAA,IAAAD,CAAA,UAAKV,EAAKI,YAAYU,OACrBd,EAAKI,YAAYkB,OACdZ,OAAAC,EAAA,IAAAD,CAAA,OAAKU,IAAKH,KACNP,OAAAC,EAAA,IAAAD,CAAA,UAAQa,MAAM,MAAMC,OAAO,MAAMC,IAAG,iCAAmCzB,EAAKI,YAAYkB,MAASI,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,KAIxNlB,OAAAC,EAAA,IAAAD,CAAA,OAAKU,IAAKH,IAAuBY,wBAAyB,CAAEC,OAAQ9B,EAAK+B,YAOlF,IAAMC,EAAK,sIClCZC,EAAa,SAAAlC,GAAwE,IAArEe,EAAqEf,EAArEe,MAAOT,EAA8DN,EAA9DM,YAAaI,EAAiDV,EAAjDU,SAAUyB,EAAuCnC,EAAvCmC,SAAUnB,EAA6BhB,EAA7BgB,UAAWC,EAAkBjB,EAAlBiB,YACjEb,EAAO,GAOb,OANIE,GACFF,EAAKG,KAAK,CAACC,KAAM,cAAeC,QAASH,IAEvCI,GACFN,EAAKG,KAAK,CAACC,KAAM,WAAYC,QAASC,IAGtCC,OAAAC,EAAA,IAAAD,CAAAyB,EAAAhB,EAAAiB,SAAA,KACGtB,GACCJ,OAAAC,EAAA,IAAAD,CAAC2B,EAAAlB,EAAD,CACEL,MAAUA,EAAL,oBACLX,KAAMA,IAIVO,OAAAC,EAAA,IAAAD,CAAA,OAAKU,IAAGV,OAAAW,EAAA,EAAAX,CAAA,CAAGO,KAAHqB,OAAyBtB,KAC/BN,OAAAC,EAAA,IAAAD,CAAA,UAAKK,EAAaL,OAAAC,EAAA,IAAAD,CAAC6B,EAAA,KAAD,CAAMnB,IAAKH,IAAkBuB,GAAIzB,GAAYD,GAAiBA,IAEjFoB,IAKPD,EAAWQ,UAAY,CACnB3B,MAAO4B,IAAUC,OAAOC,WACxBV,SAAUQ,IAAUG,KAAKD,WACzB7B,UAAW2B,IAAUC,OACrB3B,YAAa0B,IAAUI,OAGZb","file":"component---src-components-resource-post-js-a256d852a6c2ce333e9a.js","sourcesContent":["import React from \"react\"\nimport Helmet from 'react-helmet'\nimport { graphql } from \"gatsby\"\n\nimport * as styles from '../styles/styles'\n\nimport Layout from '../components/layout'\nimport CalcLayout from '../components/calc-layout'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const meta = []\n  if (post.frontmatter.description) {\n    meta.push({name: 'description', content: post.frontmatter.description})\n  }\n  if (post.frontmatter.keywords) {\n    meta.push({name: 'keywords', content: post.frontmatter.description})\n  }\n  return (\n    <Layout>\n        <CalcLayout title=\"Resources\" titleHref=\"/resources/\" extraStyles={[styles.resourcesHeader]}>\n              <Helmet\n                title={`${post.frontmatter.title} | Infinity Calcs`}\n                meta={meta}\n              >\n              </Helmet>\n             <div css={[styles.container, styles.calcContainer, styles.resourceContainer]}>\n                <h2>{post.frontmatter.title}</h2>\n                {post.frontmatter.video && (\n                    <div css={styles.resourceVideo}>\n                        <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${post.frontmatter.video}`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                    </div>\n                )}\n\n                <div css={styles.markdownStyles} dangerouslySetInnerHTML={{ __html: post.html }} />\n            </div>\n        </CalcLayout>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        video\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link } from 'gatsby'\n\nimport * as styles from '../styles/styles.js'\n\nconst CalcLayout = ({ title, description, keywords, children, titleHref, extraStyles }) => {\n  const meta = []\n  if (description) {\n    meta.push({name: 'description', content: description})\n  }\n  if (keywords) {\n    meta.push({name: 'keywords', content: keywords})\n  }\n  return (\n    <>\n      {title && (\n        <Helmet\n          title={`${title} | Infinity Calcs`}\n          meta={meta}\n        >\n        </Helmet>\n      )}\n      <div css={[styles.calcHeader, ...extraStyles]}>\n        <h1>{titleHref ? (<Link css={styles.clearLink} to={titleHref}>{title}</Link>) : title}</h1>\n      </div>\n      {children}\n    </>\n  )\n}\n\nCalcLayout.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    titleHref: PropTypes.string,\n    extraStyles: PropTypes.array,\n}\n\nexport default CalcLayout\n"],"sourceRoot":""}