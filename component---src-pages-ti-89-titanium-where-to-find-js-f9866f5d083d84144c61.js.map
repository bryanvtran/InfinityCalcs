{"version":3,"sources":["webpack:///./src/pages/ti-89-titanium/where-to-find.js","webpack:///./src/components/definitions-list.js"],"names":["query","WhereToFind","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3___default","terms","allMarkdownRemark","edges","sort","a","b","node","frontmatter","title","toLowerCase","localeCompare","console","log","location","pathname","parameters","path","split","length","type","letter","term","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_6__","_components_calc_layout__WEBPACK_IMPORTED_MODULE_7__","css","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","styles","_components_definitions_list__WEBPACK_IMPORTED_MODULE_8__","DefinitionsList","_this","_React$Component","call","this","subpath","pop","selected","toUpperCase","subpath2","state","assign","render","_this2","letters","arr","filter","startsWith","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","map","i","key","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","className","dangerouslySetInnerHTML","__html","html","React","Component"],"mappings":"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","file":"component---src-pages-ti-89-titanium-where-to-find-js-f9866f5d083d84144c61.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../../components/layout'\nimport CalcLayout from '../../components/calc-layout'\nimport DefinitionsList from '../../components/definitions-list'\n\nimport * as styles from '../../styles/styles.js'\n\nconst WhereToFind = ({data, ...props}) => {\n    const terms = data.allMarkdownRemark.edges.sort(function (a, b) {\n      return a.node.frontmatter.title.toLowerCase().localeCompare(b.node.frontmatter.title.toLowerCase());\n    });\n    const subpath = '/ti-89-titanium/where-to-find'\n    console.log(props.location.pathname)\n    const path = props.location.pathname.split('/')\n    let parameters\n    if (path.length === 5 || path.length === 6) {\n      // if path size is 5, then we are on a term\n      parameters = {\n        type: 'term',\n        letter: path[3],\n        term: path[4]\n      }\n    }\n    else if (path.length === 4 && path[3]) {\n      // if 4, then we are on a letter\n      parameters = {\n        type: 'letter',\n        letter: path[3]\n      }\n    }\n    else {\n      // if 3 or not any of the above, just show all\n      parameters = {\n        type: 'all'\n      }\n    }\n\n   \n    \n    return (\n        <Layout>\n            <CalcLayout title=\"TI-89 Titanium\">\n                <div css={[styles.container, styles.calcContainer, styles.whereToFindContainer]}>\n                    <h2>Where To Findâ€¦</h2>\n                    <DefinitionsList path={subpath} terms={terms} parameters={parameters} />\n                </div>\n            </CalcLayout>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n{\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___title], order: ASC },\n    filter: { fileAbsolutePath: { regex: \"/(ti-89-titanium)/.*(.md)$/\"}}\n  ) {\n    edges {\n      node {\n        html\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n}\n`\n\nexport default WhereToFind\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport * as styles from '../styles/styles.js'\n\nclass DefinitionsList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        // path prefix fix\n        const path = this.props.path.split('/InfinityCalcs')\n        const subpath = path[path.length-1] \n        let split = subpath.split('/where-to-find/')\n        split = split[split.length-1].split('/')\n        if (!split[split.length-1]) {\n            split.pop()\n        }\n\n        let parameters\n        if (split.length === 2) {\n            // if path size is 5, then we are on a term\n            parameters = {\n                selected: split[0].toUpperCase(),\n                term: split[1]\n            }\n        }\n        else if (split.length === 1 && split[0]) {\n            // if 4, then we are on a letter\n            parameters = {\n                selected: split[0].toUpperCase()\n            }\n        }\n        else {\n            // if 3 or not any of the above, just show all\n            parameters = {\n                selected: 'ALL'\n            }\n        }\n\n        const subpath2 = subpath.split('where-to-find')[0]\n\n        this.state = {\n            subpath: `${subpath2}where-to-find`,\n            ...parameters\n        }\n    }\n\n    render() {\n        const subpath = this.state.subpath\n\n        const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n        let arr = this.props.terms\n        if (this.state.selected !== 'ALL') {\n            arr = this.props.terms.filter((term) => term.node.frontmatter.title.toUpperCase().startsWith(this.state.selected))\n        }\n\n        return (\n            <>\n                <div css={styles.definitionsNav}>\n                    <ul>\n                        {letters.map((letter, i) => (<li key={i}> <span css={this.state.selected === letter ? styles.selected : {}}><Link to={`${subpath}/${letter.toLowerCase()}/`}>{letter}</Link></span> |</li>))}\n                        <li css={{paddingLeft: 4}}><span css={this.state.selected === 'ALL' ? styles.selected : {}}><Link to={`${subpath}/`}>See all</Link></span></li>\n                    </ul>\n                </div>\n                <div css={styles.definitionsList}>\n                    <p className=\"title\">{this.state.selected !== 'ALL' ? this.state.selected : 'All'}</p>\n                    <ul>\n                        {arr.length ? arr.map((term, i) => (\n                            <li key={i} css={term.node.frontmatter.title.toLowerCase() === this.state.term ? [styles.definition, styles.showDefinition] : [styles.definition, styles.hideDefinition]}>\n                                <div className=\"term\">\n                                    <Link to={term.node.frontmatter.title.toLowerCase() === this.state.term ? `${subpath}/${term.node.frontmatter.title[0].toLowerCase()}/` : `${subpath}/${term.node.frontmatter.title[0].toLowerCase()}/${term.node.frontmatter.title.toLowerCase()}/`}>{term.node.frontmatter.title}</Link>\n                                </div>\n                                <div className=\"definition\" dangerouslySetInnerHTML={{ __html: term.node.html }}/>                         \n                            </li>\n                        )) : 'No terms found.'}\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default DefinitionsList\n"],"sourceRoot":""}