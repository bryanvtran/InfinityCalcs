{"version":3,"sources":["webpack:///./src/pages/ti-83-plus/where-to-find.js","webpack:///./src/components/definitions-list.js"],"names":["query","WhereToFind","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","terms","allMarkdownRemark","edges","sort","a","b","node","frontmatter","title","toLowerCase","localeCompare","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_calc_layout__WEBPACK_IMPORTED_MODULE_6__","css","_emotion_css__WEBPACK_IMPORTED_MODULE_0__","styles","_components_definitions_list__WEBPACK_IMPORTED_MODULE_7__","path","location","pathname","DefinitionsList","_this","parameters","_React$Component","call","this","split","subpath","length","pop","selected","toUpperCase","term","subpath2","state","assign","render","_this2","letters","arr","filter","startsWith","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","map","letter","i","key","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","className","dangerouslySetInnerHTML","__html","html","React","Component"],"mappings":"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","file":"component---src-pages-ti-83-plus-where-to-find-js-45fbd975a170e6513847.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../../components/layout'\nimport CalcLayout from '../../components/calc-layout'\nimport DefinitionsList from '../../components/definitions-list'\n\nimport * as styles from '../../styles/styles.js'\n\nconst WhereToFind = ({data, ...props}) => {\n    const terms = data.allMarkdownRemark.edges.sort(function (a, b) {\n      return a.node.frontmatter.title.toLowerCase().localeCompare(b.node.frontmatter.title.toLowerCase());\n    });\n  \n    return (\n        <Layout>\n            <CalcLayout title=\"TI-83 Plus\">\n                <div css={[styles.container, styles.calcContainer, styles.whereToFindContainer]}>\n                    <h2>Where To Findâ€¦</h2>\n                    <DefinitionsList path={props.location.pathname} terms={terms} />\n                </div>\n            </CalcLayout>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n{\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___title], order: ASC },\n    filter: { fileAbsolutePath: { regex: \"/(ti-83-plus)/.*(.md)$/\"}}\n  ) {\n    edges {\n      node {\n        html\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n}\n`\n\nexport default WhereToFind\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport * as styles from '../styles/styles.js'\n\nclass DefinitionsList extends React.Component {\n    constructor(props) {\n        super(props)\n\n        // path prefix fix\n        const path = this.props.path.split('/InfinityCalcs')\n        const subpath = path[path.length-1] \n        let split = subpath.split('/where-to-find/')\n        split = split[split.length-1].split('/')\n        if (!split[split.length-1]) {\n            split.pop()\n        }\n\n        let parameters\n        if (split.length === 2) {\n            // if path size is 5, then we are on a term\n            parameters = {\n                selected: split[0].toUpperCase(),\n                term: split[1]\n            }\n        }\n        else if (split.length === 1 && split[0]) {\n            // if 4, then we are on a letter\n            parameters = {\n                selected: split[0].toUpperCase()\n            }\n        }\n        else {\n            // if 3 or not any of the above, just show all\n            parameters = {\n                selected: 'ALL'\n            }\n        }\n\n        const subpath2 = subpath.split('where-to-find')[0]\n\n        this.state = {\n            subpath: `${subpath2}where-to-find`,\n            ...parameters\n        }\n    }\n\n    render() {\n        const subpath = this.state.subpath\n\n        const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n        let arr = this.props.terms\n        if (this.state.selected !== 'ALL') {\n            arr = this.props.terms.filter((term) => term.node.frontmatter.title.toUpperCase().startsWith(this.state.selected))\n        }\n\n        return (\n            <>\n                <div css={styles.definitionsNav}>\n                    <ul>\n                        {letters.map((letter, i) => (<li key={i}> <span css={this.state.selected === letter ? styles.selected : {}}><Link to={`${subpath}/${letter.toLowerCase()}/`}>{letter}</Link></span> |</li>))}\n                        <li css={{paddingLeft: 4}}><span css={this.state.selected === 'ALL' ? styles.selected : {}}><Link to={`${subpath}/`}>See all</Link></span></li>\n                    </ul>\n                </div>\n                <div css={styles.definitionsList}>\n                    <p className=\"title\">{this.state.selected !== 'ALL' ? this.state.selected : 'All'}</p>\n                    <ul>\n                        {arr.length ? arr.map((term, i) => (\n                            <li key={i} css={term.node.frontmatter.title.toLowerCase() === this.state.term ? [styles.definition, styles.showDefinition] : [styles.definition, styles.hideDefinition]}>\n                                <div className=\"term\">\n                                    <Link to={term.node.frontmatter.title.toLowerCase() === this.state.term ? `${subpath}/${term.node.frontmatter.title[0].toLowerCase()}/` : `${subpath}/${term.node.frontmatter.title[0].toLowerCase()}/${term.node.frontmatter.title.toLowerCase()}/`}>{term.node.frontmatter.title}</Link>\n                                </div>\n                                <div className=\"definition\" dangerouslySetInnerHTML={{ __html: term.node.html }}/>                         \n                            </li>\n                        )) : 'No terms found.'}\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default DefinitionsList\n"],"sourceRoot":""}